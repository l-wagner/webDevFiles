/*dark-blue: 	#37474F*/
/* gray: 		#E0E0E0*/
/* yellow:		#FFD966*/
body{
	background-color: #37474F;
	font-family: 'Lato', sans-serif;
	font-weight: 300;
	font-size: 18px;
    /* set body element to available space in browser window/viewport */
	width: 100vw;
	height: 100vh;
	/*GRID FUN*/
	display: grid;
	/* horizontally align */
	justify-items: center;
	/* vertically align */
	align-items: center;
}
.hero {
	background-color: #E0E0E0;
	width: 60vw;
	border-radius: 10px;
    border: 5px white solid;
	/*GRID FUN*/
	display: grid;
	/* horizontally align */
	justify-items: center;
	/* vertically align */
	align-items: center;
	/* TWO ROWS */
	/*grid-template-areas: "column1 column2";*/
	/* TWO COLUMNS */
	grid-template-areas: "image description" "info1 info2";
	/* I want the text to have more space than the image*/
	/* .fr => fraction units to use with grids, make them add up to 1 */
	grid-template-columns: .3fr .7fr;
	/*grid-template-rows: auto;	*/
}
.hero .info1{
	grid-area: info1;
    padding: 1.5em 3em 2em 1.5em;
}
.hero .info2{
	grid-area: info2;
	padding: 1.5em 3em 2em 1.5em;
}
.hero:hover{
	background-color: #FFD966; 
}
/* lets give the image a diff selector*/
/* side note about this picture*/
.hero img{
	grid-area: image;
	/* tell image to be exactly as big as its container*/
	width: 100%;
    height: 100%;
    /* PORTRAIT */ 
    /*This property tells the content to fill the container in a variety of ways; such as "preserve that aspect ratio" or "stretch up and take up as much space as possible".*/
    object-fit: cover;
    /*The object-position property is used together with object-fit to specify how an <img> or <video> should be positioned with x/y coordinates inside its "own content box".*/
    /* x does not matter for protrait + cover, it has enough room*/
    /*object-position: 10% 150%;*/
    /*object-position: 10% 5%;*/
    /* LANDSCAPE*/
    /*object-position: 50% 0%;*/
    /* FILLER, SMALL ANNOYANCE, ZOOOOM*/
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
}
.hero .info{
	grid-area: description;
	padding: 1.5em 3em 2em 1.5em;
}
h2 {
	font-family: 'Oswald', sans-serif;
}
/* RESPONSIVENESS */
/* WE WANT FULL CONTROL OVER OUR SITE'S LOOK */
/* ALL THE WAY FROM A PHONE SCREEN TO A LAPTOP */
/* THE ONLY IMPORTANT VALUE IS WIDTH */
/* mobile portrait and up */
@media (min-width:  0px) and (max-width: 768px) {
	.hero {
		/* On small screens, put the image above the text*/
		grid-template-areas: "image" "description";
		grid-template-columns: unset;
		width: 80vw;
		/* This is what caused issues during the class!*/
		/* I had % values instead of these fraction units */
		/* When working with grids, use fractions units*/
		grid-template-rows: .4fr .6fr;
		text-align: center;
	}
	.hero img {
		object-position: 0% 10%;
	}
	.hero .info {
		font-size: 1.5em;
		padding: 1em;
	}
}
/* Mobile landscape to tablet landscape*/
@media (min-width:  769px) and (max-width: 992px) {
	.hero{
		width: 90vw;
	}
}
/*
Some common breakpoint values
min-width: 480px	Mobile-landscape (and larger)
min-width: 768px	Tablet-portrait (and larger)
min-width: 992px	Tablet-landscape (and larger)
min-width: 1200px	Laptops (and langer)